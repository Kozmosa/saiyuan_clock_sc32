; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: armcc [4d365d]
; commandline armcc [--c99 --list --split_sections --debug -c --asm --interleave -o..\Output\SC_Init.o --asm_dir=..\List --list_dir=..\List --cpu=Cortex-M0+ --apcs=interwork -O0 -I..\FWLib\SC32F1XXX_Lib\inc -I..\User\HeadFiles -I..\User -I..\Drivers -I..\Apps -I..\CMSIS -DSC32f10xx -D__UVISION_VERSION=536 ..\User\SC_Init.c]
                          THUMB
                          AREA ||i.SC_ACMP_Init||, CODE, READONLY, ALIGN=1
                  SC_ACMP_Init PROC
;;;665      */
;;;666    void SC_ACMP_Init(void)
000000  4770              BX       lr
;;;667    {
;;;668    	
;;;669        
;;;670    		
;;;671    }
;;;672    
                          ENDP
                          AREA ||i.SC_ADC_Init||, CODE, READONLY, ALIGN=1
                  SC_ADC_Init PROC
;;;441      */
;;;442    void SC_ADC_Init(void)
000000  4770              BX       lr
;;;443    {
;;;444    	
;;;445        
;;;446    	
;;;447    }
;;;448    
                          ENDP
                          AREA ||i.SC_BTM_Init||, CODE, READONLY, ALIGN=1
                  SC_BTM_Init PROC
;;;554      */
;;;555    void SC_BTM_Init(void)
000000  4770              BX       lr
;;;556    {
;;;557    	
;;;558        
;;;559    	
;;;560    }
;;;561    
                          ENDP
                          AREA ||i.SC_CRC_Init||, CODE, READONLY, ALIGN=1
                  SC_CRC_Init PROC
;;;567      */
;;;568    void SC_CRC_Init(void)
000000  4770              BX       lr
;;;569    {
;;;570    	
;;;571        
;;;572    	
;;;573    }
;;;574    
                          ENDP
                          AREA ||i.SC_DMA0_Init||, CODE, READONLY, ALIGN=1
                  SC_DMA0_Init PROC
;;;579      */
;;;580    void SC_DMA0_Init(void)
000000  4770              BX       lr
;;;581    {
;;;582    	
;;;583        
;;;584    	
;;;585    }
;;;586    
                          ENDP
                          AREA ||i.SC_DMA1_Init||, CODE, READONLY, ALIGN=1
                  SC_DMA1_Init PROC
;;;591      */
;;;592    void SC_DMA1_Init(void)
000000  4770              BX       lr
;;;593    {
;;;594    	
;;;595        
;;;596    	
;;;597    }
;;;598    #if defined (SC32f10xx)
                          ENDP
                          AREA ||i.SC_DMA2_Init||, CODE, READONLY, ALIGN=1
                  SC_DMA2_Init PROC
;;;604      */
;;;605    void SC_DMA2_Init(void)
000000  4770              BX       lr
;;;606    {
;;;607    	
;;;608        
;;;609    	
;;;610    }
;;;611    
                          ENDP
                          AREA ||i.SC_DMA3_Init||, CODE, READONLY, ALIGN=1
                  SC_DMA3_Init PROC
;;;616      */
;;;617    void SC_DMA3_Init(void)
000000  4770              BX       lr
;;;618    {
;;;619    	
;;;620        
;;;621    	
;;;622    }
;;;623    #endif
                          ENDP
                          AREA ||i.SC_GPIO_Init||, CODE, READONLY, ALIGN=2
                  SC_GPIO_Init PROC
;;;116      */
;;;117    void SC_GPIO_Init(void)
000000  b500              PUSH     {lr}
;;;118    {
000002  b08d              SUB      sp,sp,#0x34
;;;119    	
;;;120        
;;;121    	GPIO_InitTypeDef GPIOInit_PC04_Struct;
;;;122    	GPIOInit_PC04_Struct.GPIO_Pin = GPIO_Pin_4;
000004  2110              MOVS     r1,#0x10
000006  4668              MOV      r0,sp
000008  8581              STRH     r1,[r0,#0x2c]
;;;123    	GPIOInit_PC04_Struct.GPIO_Mode = GPIO_Mode_OUT_PP;
00000a  2102              MOVS     r1,#2
00000c  85c1              STRH     r1,[r0,#0x2e]
;;;124    	GPIOInit_PC04_Struct.GPIO_DriveLevel = 0;
00000e  2100              MOVS     r1,#0
000010  8601              STRH     r1,[r0,#0x30]
;;;125    	GPIO_Init(GPIOC,&GPIOInit_PC04_Struct);
000012  a90b              ADD      r1,sp,#0x2c
000014  481f              LDR      r0,|L9.148|
000016  f7fffffe          BL       GPIO_Init
;;;126    	GPIO_InitTypeDef GPIOInit_PC05_Struct;
;;;127    	GPIOInit_PC05_Struct.GPIO_Pin = GPIO_Pin_5;
00001a  2120              MOVS     r1,#0x20
00001c  4668              MOV      r0,sp
00001e  8481              STRH     r1,[r0,#0x24]
;;;128    	GPIOInit_PC05_Struct.GPIO_Mode = GPIO_Mode_OUT_PP;
000020  2102              MOVS     r1,#2
000022  84c1              STRH     r1,[r0,#0x26]
;;;129    	GPIOInit_PC05_Struct.GPIO_DriveLevel = 0;
000024  2100              MOVS     r1,#0
000026  8501              STRH     r1,[r0,#0x28]
;;;130    	GPIO_Init(GPIOC,&GPIOInit_PC05_Struct);
000028  a909              ADD      r1,sp,#0x24
00002a  481a              LDR      r0,|L9.148|
00002c  f7fffffe          BL       GPIO_Init
;;;131    	GPIO_InitTypeDef GPIOInit_PC10_Struct;
;;;132    	GPIOInit_PC10_Struct.GPIO_Pin = GPIO_Pin_10;
000030  2101              MOVS     r1,#1
000032  0289              LSLS     r1,r1,#10
000034  4668              MOV      r0,sp
000036  8381              STRH     r1,[r0,#0x1c]
;;;133    	GPIOInit_PC10_Struct.GPIO_Mode = GPIO_Mode_OUT_PP;
000038  2102              MOVS     r1,#2
00003a  83c1              STRH     r1,[r0,#0x1e]
;;;134    	GPIOInit_PC10_Struct.GPIO_DriveLevel = 0;
00003c  2100              MOVS     r1,#0
00003e  8401              STRH     r1,[r0,#0x20]
;;;135    	GPIO_Init(GPIOC,&GPIOInit_PC10_Struct);
000040  a907              ADD      r1,sp,#0x1c
000042  4814              LDR      r0,|L9.148|
000044  f7fffffe          BL       GPIO_Init
;;;136    	GPIO_InitTypeDef GPIOInit_PC11_Struct;
;;;137    	GPIOInit_PC11_Struct.GPIO_Pin = GPIO_Pin_11;
000048  2101              MOVS     r1,#1
00004a  02c9              LSLS     r1,r1,#11
00004c  4668              MOV      r0,sp
00004e  8281              STRH     r1,[r0,#0x14]
;;;138    	GPIOInit_PC11_Struct.GPIO_Mode = GPIO_Mode_OUT_PP;
000050  2102              MOVS     r1,#2
000052  82c1              STRH     r1,[r0,#0x16]
;;;139    	GPIOInit_PC11_Struct.GPIO_DriveLevel = 0;
000054  2100              MOVS     r1,#0
000056  8301              STRH     r1,[r0,#0x18]
;;;140    	GPIO_Init(GPIOC,&GPIOInit_PC11_Struct);
000058  a905              ADD      r1,sp,#0x14
00005a  480e              LDR      r0,|L9.148|
00005c  f7fffffe          BL       GPIO_Init
;;;141    	GPIO_InitTypeDef GPIOInit_PA07_Struct;
;;;142    	GPIOInit_PA07_Struct.GPIO_Pin = GPIO_Pin_7;
000060  2180              MOVS     r1,#0x80
000062  4668              MOV      r0,sp
000064  8181              STRH     r1,[r0,#0xc]
;;;143    	GPIOInit_PA07_Struct.GPIO_Mode = GPIO_Mode_OUT_PP;
000066  2102              MOVS     r1,#2
000068  81c1              STRH     r1,[r0,#0xe]
;;;144    	GPIOInit_PA07_Struct.GPIO_DriveLevel = 0;
00006a  2100              MOVS     r1,#0
00006c  8201              STRH     r1,[r0,#0x10]
;;;145    	GPIO_Init(GPIOA,&GPIOInit_PA07_Struct);
00006e  a903              ADD      r1,sp,#0xc
000070  4809              LDR      r0,|L9.152|
000072  f7fffffe          BL       GPIO_Init
;;;146    	GPIO_InitTypeDef GPIOInit_PA08_Struct;
;;;147    	GPIOInit_PA08_Struct.GPIO_Pin = GPIO_Pin_8;
000076  21ff              MOVS     r1,#0xff
000078  3101              ADDS     r1,#1
00007a  4668              MOV      r0,sp
00007c  8081              STRH     r1,[r0,#4]
;;;148    	GPIOInit_PA08_Struct.GPIO_Mode = GPIO_Mode_OUT_PP;
00007e  2102              MOVS     r1,#2
000080  80c1              STRH     r1,[r0,#6]
;;;149    	GPIOInit_PA08_Struct.GPIO_DriveLevel = 0;
000082  2100              MOVS     r1,#0
000084  8101              STRH     r1,[r0,#8]
;;;150    	GPIO_Init(GPIOA,&GPIOInit_PA08_Struct);
000086  a901              ADD      r1,sp,#4
000088  4803              LDR      r0,|L9.152|
00008a  f7fffffe          BL       GPIO_Init
;;;151    			
;;;152    }
00008e  b00d              ADD      sp,sp,#0x34
000090  bd00              POP      {pc}
;;;153    
                          ENDP
000092  0000              DCW      0x0000
                  |L9.148|
                          DCD      0x40011200
                  |L9.152|
                          DCD      0x40011000
                          AREA ||i.SC_IAP_Init||, CODE, READONLY, ALIGN=1
                  SC_IAP_Init PROC
;;;453      */
;;;454    void SC_IAP_Init(void)
000000  4770              BX       lr
;;;455    {
;;;456    	
;;;457        
;;;458    			
;;;459    }
;;;460    
                          ENDP
                          AREA ||i.SC_INT_Init||, CODE, READONLY, ALIGN=1
                  SC_INT_Init PROC
;;;429      */
;;;430    void SC_INT_Init(void)
000000  4770              BX       lr
;;;431    {
;;;432    	
;;;433        
;;;434    	
;;;435    }
;;;436    
                          ENDP
                          AREA ||i.SC_Init||, CODE, READONLY, ALIGN=1
                  SC_Init PROC
;;;29       */
;;;30     void SC_Init(void)
000000  b510              PUSH     {r4,lr}
;;;31     {
;;;32     	
;;;33         
;;;34     	SC_GPIO_Init();
000002  f7fffffe          BL       SC_GPIO_Init
;;;35     	SC_OPTION_Init();
000006  f7fffffe          BL       SC_OPTION_Init
;;;36     	SC_RCC_Init();
00000a  f7fffffe          BL       SC_RCC_Init
;;;37     	SC_SYSTICK_Init();
00000e  f7fffffe          BL       SC_SYSTICK_Init
;;;38     	SC_UART0_Init();
000012  f7fffffe          BL       SC_UART0_Init
;;;39     	SC_TWI0_Init();
000016  f7fffffe          BL       SC_TWI0_Init
;;;40     	SC_TIM2_Init();
00001a  f7fffffe          BL       SC_TIM2_Init
;;;41     	SC_PWM0_Init();
00001e  f7fffffe          BL       SC_PWM0_Init
;;;42     	
;;;43     }
000022  bd10              POP      {r4,pc}
;;;44     
                          ENDP
                          AREA ||i.SC_LCD_Init||, CODE, READONLY, ALIGN=1
                  SC_LCD_Init PROC
;;;641      */
;;;642    void SC_LCD_Init(void)
000000  4770              BX       lr
;;;643    {
;;;644    	
;;;645        
;;;646    	
;;;647    }
;;;648    
                          ENDP
                          AREA ||i.SC_LEDPWM_Init||, CODE, READONLY, ALIGN=1
                  SC_LEDPWM_Init PROC
;;;417      */
;;;418    void SC_LEDPWM_Init(void)
000000  4770              BX       lr
;;;419    {
;;;420    	
;;;421        
;;;422    		
;;;423    }
;;;424    
                          ENDP
                          AREA ||i.SC_LED_Init||, CODE, READONLY, ALIGN=1
                  SC_LED_Init PROC
;;;653      */
;;;654    void SC_LED_Init(void)
000000  4770              BX       lr
;;;655    {
;;;656    	
;;;657        
;;;658    	
;;;659    }
;;;660    
                          ENDP
                          AREA ||i.SC_NVIC_Init||, CODE, READONLY, ALIGN=1
                  SC_NVIC_Init PROC
;;;104      */
;;;105    void SC_NVIC_Init(void)
000000  4770              BX       lr
;;;106    {
;;;107    	
;;;108        
;;;109    		
;;;110    }
;;;111    
                          ENDP
                          AREA ||i.SC_OPTION_Init||, CODE, READONLY, ALIGN=2
                  SC_OPTION_Init PROC
;;;88       */
;;;89     void SC_OPTION_Init(void)
000000  b510              PUSH     {r4,lr}
;;;90     {
;;;91     	
;;;92         
;;;93     	SC32F10xSx_NIO_Init();
000002  480c              LDR      r0,|L17.52|
000004  6a00              LDR      r0,[r0,#0x20]
000006  2106              MOVS     r1,#6
000008  4308              ORRS     r0,r0,r1
00000a  490a              LDR      r1,|L17.52|
00000c  6208              STR      r0,[r1,#0x20]
00000e  480a              LDR      r0,|L17.56|
000010  6a00              LDR      r0,[r0,#0x20]
000012  2109              MOVS     r1,#9
000014  0309              LSLS     r1,r1,#12
000016  4308              ORRS     r0,r0,r1
000018  4907              LDR      r1,|L17.56|
00001a  6208              STR      r0,[r1,#0x20]
;;;94     	OPTION_LVRConfig(OPTION_LVR_4_3V);
00001c  2003              MOVS     r0,#3
00001e  f7fffffe          BL       OPTION_LVRConfig
;;;95     	OPTION_JTAGCmd(DISABLE);
000022  2000              MOVS     r0,#0
000024  f7fffffe          BL       OPTION_JTAGCmd
;;;96     	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_IFB,DISABLE);
000028  2100              MOVS     r1,#0
00002a  2004              MOVS     r0,#4
00002c  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;97     		
;;;98     }
000030  bd10              POP      {r4,pc}
;;;99     
                          ENDP
000032  0000              DCW      0x0000
                  |L17.52|
                          DCD      0x40011000
                  |L17.56|
                          DCD      0x40011100
                          AREA ||i.SC_PWM0_Init||, CODE, READONLY, ALIGN=2
                  SC_PWM0_Init PROC
;;;379      */
;;;380    void SC_PWM0_Init(void)
000000  b500              PUSH     {lr}
;;;381    {
000002  b087              SUB      sp,sp,#0x1c
;;;382    	
;;;383        
;;;384    	RCC_Unlock(0xFF);
000004  20ff              MOVS     r0,#0xff
000006  f7fffffe          BL       RCC_Unlock
;;;385    	RCC_APB0PeriphClockCmd(RCC_APB0Periph_PWM0,ENABLE);
00000a  2101              MOVS     r1,#1
00000c  0208              LSLS     r0,r1,#8
00000e  f7fffffe          BL       RCC_APB0PeriphClockCmd
;;;386    	PWM_SetDuty(PWM0,PWM_Channel_0,0);
000012  2200              MOVS     r2,#0
000014  2101              MOVS     r1,#1
000016  482a              LDR      r0,|L18.192|
000018  f7fffffe          BL       PWM_SetDuty
;;;387    	PWM_SetDuty(PWM0,PWM_Channel_1,800);
00001c  2219              MOVS     r2,#0x19
00001e  0152              LSLS     r2,r2,#5
000020  2102              MOVS     r1,#2
000022  4827              LDR      r0,|L18.192|
000024  f7fffffe          BL       PWM_SetDuty
;;;388    	PWM_SetDuty(PWM0,PWM_Channel_2,600);
000028  224b              MOVS     r2,#0x4b
00002a  00d2              LSLS     r2,r2,#3
00002c  2104              MOVS     r1,#4
00002e  4824              LDR      r0,|L18.192|
000030  f7fffffe          BL       PWM_SetDuty
;;;389    	PWM_SetDuty(PWM0,PWM_Channel_3,100);
000034  2264              MOVS     r2,#0x64
000036  2108              MOVS     r1,#8
000038  4821              LDR      r0,|L18.192|
00003a  f7fffffe          BL       PWM_SetDuty
;;;390    	PWM_SetDuty(PWM0,PWM_Channel_4,0);
00003e  2200              MOVS     r2,#0
000040  2110              MOVS     r1,#0x10
000042  481f              LDR      r0,|L18.192|
000044  f7fffffe          BL       PWM_SetDuty
;;;391    	PWM_SetDuty(PWM0,PWM_Channel_5,0);
000048  2200              MOVS     r2,#0
00004a  2120              MOVS     r1,#0x20
00004c  481c              LDR      r0,|L18.192|
00004e  f7fffffe          BL       PWM_SetDuty
;;;392    	PWM_SetDuty(PWM0,PWM_Channel_6,0);
000052  2200              MOVS     r2,#0
000054  2140              MOVS     r1,#0x40
000056  481a              LDR      r0,|L18.192|
000058  f7fffffe          BL       PWM_SetDuty
;;;393    	PWM_SetDuty(PWM0,PWM_Channel_7,0);
00005c  2200              MOVS     r2,#0
00005e  2180              MOVS     r1,#0x80
000060  4817              LDR      r0,|L18.192|
000062  f7fffffe          BL       PWM_SetDuty
;;;394    	PWM_InitTypeDef PWM_InitStruct;
;;;395    	PWM_InitStruct.PWM_WorkMode = PWM_WorkMode_Independent;
000066  2100              MOVS     r1,#0
000068  4668              MOV      r0,sp
00006a  8201              STRH     r1,[r0,#0x10]
;;;396    	PWM_InitStruct.PWM_Prescaler = PWM_PRESCALER_DIV1;
00006c  8181              STRH     r1,[r0,#0xc]
;;;397    	PWM_InitStruct.PWM_Cycle = 1000;
00006e  217d              MOVS     r1,#0x7d
000070  00c9              LSLS     r1,r1,#3
000072  8241              STRH     r1,[r0,#0x12]
;;;398    	PWM_InitStruct.PWM_OutputChannel = PWMChannel_Less|PWM_Channel_1|PWM_Channel_2|PWM_Channel_3;
000074  200e              MOVS     r0,#0xe
000076  9005              STR      r0,[sp,#0x14]
;;;399    	PWM_InitStruct.PWM_LowPolarityChannl = PWMChannel_Less;
000078  2000              MOVS     r0,#0
00007a  9006              STR      r0,[sp,#0x18]
;;;400    	PWM_InitStruct.PWM_AlignedMode = PWM_AlignmentMode_Edge;
00007c  2100              MOVS     r1,#0
00007e  4668              MOV      r0,sp
000080  81c1              STRH     r1,[r0,#0xe]
;;;401    	PWM_Init(PWM0,&PWM_InitStruct);
000082  a903              ADD      r1,sp,#0xc
000084  480e              LDR      r0,|L18.192|
000086  f7fffffe          BL       PWM_Init
;;;402    	PWM_FDInitTypeDef PWM_FDInitStruct;
;;;403    	PWM_FDInitStruct.PWM_FDMode = PWM_FDMode_Immediate;
00008a  2120              MOVS     r1,#0x20
00008c  4668              MOV      r0,sp
00008e  8081              STRH     r1,[r0,#4]
;;;404    	PWM_FDInitStruct.PWM_FDVoltage = PWM_FDVoltage_Low;
000090  2100              MOVS     r1,#0
000092  80c1              STRH     r1,[r0,#6]
;;;405    	PWM_FDInitStruct.PWM_FDFilteringTime = PWM_FilteringTime_0us;
000094  8101              STRH     r1,[r0,#8]
;;;406    	PWM_FDInit(PWM0, &PWM_FDInitStruct);
000096  a901              ADD      r1,sp,#4
000098  4809              LDR      r0,|L18.192|
00009a  f7fffffe          BL       PWM_FDInit
;;;407    	PWM_FDCmd(PWM0,DISABLE);
00009e  2100              MOVS     r1,#0
0000a0  4807              LDR      r0,|L18.192|
0000a2  f7fffffe          BL       PWM_FDCmd
;;;408    	PWM_ITConfig(PWM0,PWM_IT_INTEN,DISABLE);
0000a6  2200              MOVS     r2,#0
0000a8  21ff              MOVS     r1,#0xff
0000aa  3101              ADDS     r1,#1
0000ac  4804              LDR      r0,|L18.192|
0000ae  f7fffffe          BL       PWM_ITConfig
;;;409    	PWM_Cmd(PWM0,ENABLE);
0000b2  2101              MOVS     r1,#1
0000b4  4802              LDR      r0,|L18.192|
0000b6  f7fffffe          BL       PWM_Cmd
;;;410    		
;;;411    }
0000ba  b007              ADD      sp,sp,#0x1c
0000bc  bd00              POP      {pc}
;;;412    
                          ENDP
0000be  0000              DCW      0x0000
                  |L18.192|
                          DCD      0x40020200
                          AREA ||i.SC_PWR_Init||, CODE, READONLY, ALIGN=1
                  SC_PWR_Init PROC
;;;677      */
;;;678    void SC_PWR_Init(void)
000000  4770              BX       lr
;;;679    {
;;;680    	
;;;681        
;;;682    		
;;;683    }
;;;684    #if defined (SC32f12xx)
                          ENDP
                          AREA ||i.SC_RCC_Init||, CODE, READONLY, ALIGN=2
                  SC_RCC_Init PROC
;;;49       */
;;;50     void SC_RCC_Init(void)
000000  b510              PUSH     {r4,lr}
;;;51     {
;;;52     	
;;;53         
;;;54     	RCC_Unlock(0xFF);
000002  20ff              MOVS     r0,#0xff
000004  f7fffffe          BL       RCC_Unlock
;;;55     	RCC_HXTCmd(DISABLE);
000008  2000              MOVS     r0,#0
00000a  f7fffffe          BL       RCC_HXTCmd
;;;56     	RCC_LXTCmd(DISABLE);
00000e  2000              MOVS     r0,#0
000010  f7fffffe          BL       RCC_LXTCmd
;;;57     	RCC_LIRCCmd(ENABLE);
000014  2001              MOVS     r0,#1
000016  f7fffffe          BL       RCC_LIRCCmd
;;;58     	RCC_HIRCCmd(ENABLE);
00001a  2001              MOVS     r0,#1
00001c  f7fffffe          BL       RCC_HIRCCmd
;;;59     	RCC_ITConfig(ENABLE);
000020  2001              MOVS     r0,#1
000022  f7fffffe          BL       RCC_ITConfig
;;;60     	RCC_SYSCLKConfig(RCC_SYSCLKSource_HIRC);
000026  4806              LDR      r0,|L20.64|
000028  f7fffffe          BL       RCC_SYSCLKConfig
;;;61     	RCC_HCLKConfig(RCC_SYSCLK_Div1);
00002c  2000              MOVS     r0,#0
00002e  f7fffffe          BL       RCC_HCLKConfig
;;;62     	RCC_APB0Config(RCC_HCLK_Div1);
000032  2000              MOVS     r0,#0
000034  f7fffffe          BL       RCC_APB0Config
;;;63     	RCC_APB0Cmd(ENABLE);
000038  2001              MOVS     r0,#1
00003a  f7fffffe          BL       RCC_APB0Cmd
;;;64     		
;;;65     }
00003e  bd10              POP      {r4,pc}
;;;66     
                          ENDP
                  |L20.64|
                          DCD      0x0000ff7f
                          AREA ||i.SC_SPI0_Init||, CODE, READONLY, ALIGN=1
                  SC_SPI0_Init PROC
;;;465      */
;;;466    void SC_SPI0_Init(void)
000000  4770              BX       lr
;;;467    {
;;;468    	
;;;469        
;;;470    			
;;;471    }
;;;472    
                          ENDP
                          AREA ||i.SC_SPI1_Init||, CODE, READONLY, ALIGN=1
                  SC_SPI1_Init PROC
;;;477      */
;;;478    void SC_SPI1_Init(void)
000000  4770              BX       lr
;;;479    {
;;;480    	
;;;481        
;;;482    			
;;;483    }
;;;484    #if defined (SC32f12xx)
                          ENDP
                          AREA ||i.SC_SYSTICK_Init||, CODE, READONLY, ALIGN=1
                  SC_SYSTICK_Init PROC
;;;71       */
;;;72     void SC_SYSTICK_Init(void)
000000  b510              PUSH     {r4,lr}
;;;73     {
;;;74     	
;;;75         
;;;76     	RCC_Unlock(0xFF);
000002  20ff              MOVS     r0,#0xff
000004  f7fffffe          BL       RCC_Unlock
;;;77     	RCC_SystickCLKConfig(RCC_SysTickSource_HCLK_DIV8);
000008  2000              MOVS     r0,#0
00000a  f7fffffe          BL       RCC_SystickCLKConfig
;;;78     	RCC_SystickSetCounter(16000);
00000e  207d              MOVS     r0,#0x7d
000010  01c0              LSLS     r0,r0,#7
000012  f7fffffe          BL       RCC_SystickSetCounter
;;;79     	NVIC_SetPriority(SysTick_IRQn,0);
000016  2100              MOVS     r1,#0
000018  1e48              SUBS     r0,r1,#1
00001a  f7fffffe          BL       __NVIC_SetPriority
;;;80     	RCC_SystickCmd(ENABLE);
00001e  2001              MOVS     r0,#1
000020  f7fffffe          BL       RCC_SystickCmd
;;;81     	
;;;82     }
000024  bd10              POP      {r4,pc}
;;;83     
                          ENDP
                          AREA ||i.SC_TIM0_Init||, CODE, READONLY, ALIGN=1
                  SC_TIM0_Init PROC
;;;256      */
;;;257    void SC_TIM0_Init(void)
000000  4770              BX       lr
;;;258    {
;;;259    	
;;;260        
;;;261    			
;;;262    }
;;;263    
                          ENDP
                          AREA ||i.SC_TIM1_Init||, CODE, READONLY, ALIGN=1
                  SC_TIM1_Init PROC
;;;268      */
;;;269    void SC_TIM1_Init(void)
000000  4770              BX       lr
;;;270    {
;;;271    	
;;;272        
;;;273    		
;;;274    }
;;;275    
                          ENDP
                          AREA ||i.SC_TIM2_Init||, CODE, READONLY, ALIGN=2
                  SC_TIM2_Init PROC
;;;280      */
;;;281    void SC_TIM2_Init(void)
000000  b500              PUSH     {lr}
;;;282    {
000002  b085              SUB      sp,sp,#0x14
;;;283    	
;;;284        
;;;285    	RCC_APB0PeriphClockCmd(RCC_APB0Periph_TIM2,ENABLE);
000004  2101              MOVS     r1,#1
000006  2004              MOVS     r0,#4
000008  f7fffffe          BL       RCC_APB0PeriphClockCmd
;;;286    	TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStruct;
;;;287    	TIM_TimeBaseInitStruct.TIM_WorkMode = TIM_WorkMode_Timer;
00000c  2100              MOVS     r1,#0
00000e  4668              MOV      r0,sp
000010  8141              STRH     r1,[r0,#0xa]
;;;288    	TIM_TimeBaseInitStruct.TIM_Prescaler = TIM_PRESCALER_2;
000012  21ff              MOVS     r1,#0xff
000014  3101              ADDS     r1,#1
000016  8101              STRH     r1,[r0,#8]
;;;289    	TIM_TimeBaseInitStruct.TIM_CounterMode = TIM_CounterMode_Up;
000018  2100              MOVS     r1,#0
00001a  8181              STRH     r1,[r0,#0xc]
;;;290    	TIM_TimeBaseInitStruct.TIM_Preload = 12768;
00001c  4927              LDR      r1,|L26.188|
00001e  8201              STRH     r1,[r0,#0x10]
;;;291    	TIM_TimeBaseInitStruct.TIM_EXENX = TIM_EXENX_Disable;
000020  2100              MOVS     r1,#0
000022  81c1              STRH     r1,[r0,#0xe]
;;;292    	TIM_TIMBaseInit(TIM2, &TIM_TimeBaseInitStruct);
000024  a902              ADD      r1,sp,#8
000026  4826              LDR      r0,|L26.192|
000028  f7fffffe          BL       TIM_TIMBaseInit
;;;293    	TIM_IC_InitTypeDef TIM_IC_InitStruct;
;;;294    	TIM_IC_InitStruct.TIM_RICPIN = TIM_RICPin_Disable;
00002c  2100              MOVS     r1,#0
00002e  4668              MOV      r0,sp
000030  8081              STRH     r1,[r0,#4]
;;;295    	TIM_IC_InitStruct.TIM_FICPIN = TIM_FICPin_Disable;
000032  80c1              STRH     r1,[r0,#6]
;;;296    	TIM_ICInit(TIM2, &TIM_IC_InitStruct);
000034  a901              ADD      r1,sp,#4
000036  4822              LDR      r0,|L26.192|
000038  f7fffffe          BL       TIM_ICInit
;;;297    	TIM_ICCmd(TIM2, DISABLE);
00003c  2100              MOVS     r1,#0
00003e  4820              LDR      r0,|L26.192|
000040  f7fffffe          BL       TIM_ICCmd
;;;298    	TIM_PWM_InitTypeDef TIM_PWM_InitStruct;
;;;299    	TIM_PWM_InitStruct.TIM_PWMOutputChannl = TIM_PWMChannel_PWMA;
000044  2102              MOVS     r1,#2
000046  4668              MOV      r0,sp
000048  8001              STRH     r1,[r0,#0]
;;;300    	TIM_PWM_InitStruct.TIM_PWMLowPolarityChannl = TIM_PWMChannel_Less;
00004a  2100              MOVS     r1,#0
00004c  8041              STRH     r1,[r0,#2]
;;;301    	TIM_PWMInit(TIM2, &TIM_PWM_InitStruct);
00004e  4669              MOV      r1,sp
000050  481b              LDR      r0,|L26.192|
000052  f7fffffe          BL       TIM_PWMInit
;;;302    	TIM_PinRemapConfig(TIM2, TIM_PinRemap_Default);
000056  2100              MOVS     r1,#0
000058  4819              LDR      r0,|L26.192|
00005a  f7fffffe          BL       TIM_PinRemapConfig
;;;303    	TIM_PWMSetDuty(TIM2, TIM_PWMChannel_PWMA,80);
00005e  2250              MOVS     r2,#0x50
000060  2102              MOVS     r1,#2
000062  4817              LDR      r0,|L26.192|
000064  f7fffffe          BL       TIM_PWMSetDuty
;;;304    	TIM_ITConfig(TIM2,TIM_IT_INTEN, ENABLE);
000068  2201              MOVS     r2,#1
00006a  4611              MOV      r1,r2
00006c  4814              LDR      r0,|L26.192|
00006e  f7fffffe          BL       TIM_ITConfig
;;;305    	TIM_ITConfig(TIM2,TIM_IT_EXR,DISABLE);
000072  2200              MOVS     r2,#0
000074  2104              MOVS     r1,#4
000076  4812              LDR      r0,|L26.192|
000078  f7fffffe          BL       TIM_ITConfig
;;;306    	TIM_ITConfig(TIM2,TIM_IT_EXF,DISABLE);
00007c  2200              MOVS     r2,#0
00007e  2108              MOVS     r1,#8
000080  480f              LDR      r0,|L26.192|
000082  f7fffffe          BL       TIM_ITConfig
;;;307    	TIM_ITConfig(TIM2,TIM_IT_TI,ENABLE);
000086  2201              MOVS     r2,#1
000088  2102              MOVS     r1,#2
00008a  480d              LDR      r0,|L26.192|
00008c  f7fffffe          BL       TIM_ITConfig
;;;308    	TIM_DMACmd(TIM2,TIM_DMAReq_CAPR,DISABLE);
000090  2200              MOVS     r2,#0
000092  2120              MOVS     r1,#0x20
000094  480a              LDR      r0,|L26.192|
000096  f7fffffe          BL       TIM_DMACmd
;;;309    	TIM_DMACmd(TIM2,TIM_DMAReq_CAPF,DISABLE);
00009a  2200              MOVS     r2,#0
00009c  2140              MOVS     r1,#0x40
00009e  4808              LDR      r0,|L26.192|
0000a0  f7fffffe          BL       TIM_DMACmd
;;;310    	TIM_DMACmd(TIM2,TIM_DMAReq_TI,DISABLE);
0000a4  2200              MOVS     r2,#0
0000a6  2110              MOVS     r1,#0x10
0000a8  4805              LDR      r0,|L26.192|
0000aa  f7fffffe          BL       TIM_DMACmd
;;;311    	TIM_Cmd(TIM2,DISABLE);
0000ae  2100              MOVS     r1,#0
0000b0  4803              LDR      r0,|L26.192|
0000b2  f7fffffe          BL       TIM_Cmd
;;;312    		
;;;313    }
0000b6  b005              ADD      sp,sp,#0x14
0000b8  bd00              POP      {pc}
;;;314    
                          ENDP
0000ba  0000              DCW      0x0000
                  |L26.188|
                          DCD      0x000031e0
                  |L26.192|
                          DCD      0x40020180
                          AREA ||i.SC_TIM3_Init||, CODE, READONLY, ALIGN=1
                  SC_TIM3_Init PROC
;;;319      */
;;;320    void SC_TIM3_Init(void)
000000  4770              BX       lr
;;;321    {
;;;322    	
;;;323        
;;;324    		
;;;325    }
;;;326    
                          ENDP
                          AREA ||i.SC_TIM4_Init||, CODE, READONLY, ALIGN=1
                  SC_TIM4_Init PROC
;;;331      */
;;;332    void SC_TIM4_Init(void)
000000  4770              BX       lr
;;;333    {
;;;334    	
;;;335        
;;;336    		
;;;337    }
;;;338    
                          ENDP
                          AREA ||i.SC_TIM5_Init||, CODE, READONLY, ALIGN=1
                  SC_TIM5_Init PROC
;;;343      */
;;;344    void SC_TIM5_Init(void)
000000  4770              BX       lr
;;;345    {
;;;346    	
;;;347        
;;;348    			
;;;349    }
;;;350    
                          ENDP
                          AREA ||i.SC_TIM6_Init||, CODE, READONLY, ALIGN=1
                  SC_TIM6_Init PROC
;;;355      */
;;;356    void SC_TIM6_Init(void)
000000  4770              BX       lr
;;;357    {
;;;358    	
;;;359        
;;;360    			
;;;361    }
;;;362    
                          ENDP
                          AREA ||i.SC_TIM7_Init||, CODE, READONLY, ALIGN=1
                  SC_TIM7_Init PROC
;;;367      */
;;;368    void SC_TIM7_Init(void)
000000  4770              BX       lr
;;;369    {
;;;370    	
;;;371        
;;;372    			
;;;373    }
;;;374    
                          ENDP
                          AREA ||i.SC_TWI0_Init||, CODE, READONLY, ALIGN=2
                  SC_TWI0_Init PROC
;;;504      */
;;;505    void SC_TWI0_Init(void)
000000  b500              PUSH     {lr}
;;;506    {
000002  b087              SUB      sp,sp,#0x1c
;;;507    	
;;;508        
;;;509    	GPIO_InitTypeDef GPIOInit_PA05_Struct;
;;;510    	GPIOInit_PA05_Struct.GPIO_Pin = GPIO_Pin_5;
000004  2120              MOVS     r1,#0x20
000006  4668              MOV      r0,sp
000008  8281              STRH     r1,[r0,#0x14]
;;;511    	GPIOInit_PA05_Struct.GPIO_Mode = GPIO_Mode_IN_PU;
00000a  2101              MOVS     r1,#1
00000c  82c1              STRH     r1,[r0,#0x16]
;;;512    	GPIOInit_PA05_Struct.GPIO_DriveLevel = 0;
00000e  2100              MOVS     r1,#0
000010  8301              STRH     r1,[r0,#0x18]
;;;513    	GPIO_Init(GPIOA,&GPIOInit_PA05_Struct);
000012  a905              ADD      r1,sp,#0x14
000014  4824              LDR      r0,|L32.168|
000016  f7fffffe          BL       GPIO_Init
;;;514    	GPIO_InitTypeDef GPIOInit_PA06_Struct;
;;;515    	GPIOInit_PA06_Struct.GPIO_Pin = GPIO_Pin_6;
00001a  2140              MOVS     r1,#0x40
00001c  4668              MOV      r0,sp
00001e  8181              STRH     r1,[r0,#0xc]
;;;516    	GPIOInit_PA06_Struct.GPIO_Mode = GPIO_Mode_IN_PU;
000020  2101              MOVS     r1,#1
000022  81c1              STRH     r1,[r0,#0xe]
;;;517    	GPIOInit_PA06_Struct.GPIO_DriveLevel = 0;
000024  2100              MOVS     r1,#0
000026  8201              STRH     r1,[r0,#0x10]
;;;518    	GPIO_Init(GPIOA,&GPIOInit_PA06_Struct);
000028  a903              ADD      r1,sp,#0xc
00002a  481f              LDR      r0,|L32.168|
00002c  f7fffffe          BL       GPIO_Init
;;;519    	RCC_APB0PeriphClockCmd(RCC_APB0Periph_TWI0, ENABLE);
000030  2101              MOVS     r1,#1
000032  2010              MOVS     r0,#0x10
000034  f7fffffe          BL       RCC_APB0PeriphClockCmd
;;;520    	TWI_InitTypeDef TWI_InitStruct;
;;;521    	TWI_InitStruct.TWI_Ack = TWI_Ack_Enable;
000038  2102              MOVS     r1,#2
00003a  4668              MOV      r0,sp
00003c  8001              STRH     r1,[r0,#0]
;;;522    	TWI_InitStruct.TWI_Prescaler = TWI_PRESCALER_2048;
00003e  01c9              LSLS     r1,r1,#7
000040  8041              STRH     r1,[r0,#2]
;;;523    	TWI_InitStruct.TWI_Stretch = TWI_Stretch_Disable;
000042  2100              MOVS     r1,#0
000044  8081              STRH     r1,[r0,#4]
;;;524    	TWI_InitStruct.TWI_SlaveAdress = 0x01;
000046  2001              MOVS     r0,#1
000048  9002              STR      r0,[sp,#8]
;;;525    	TWI_InitStruct.TWI_GeneralCall = TWI_GeneralCall_Disable;
00004a  4668              MOV      r0,sp
00004c  80c1              STRH     r1,[r0,#6]
;;;526    	TWI_Init(TWI0, &TWI_InitStruct);
00004e  4669              MOV      r1,sp
000050  4816              LDR      r0,|L32.172|
000052  f7fffffe          BL       TWI_Init
;;;527    	TWI_PinRemapConfig(TWI0,TWI_PinRemap_B);
000056  2101              MOVS     r1,#1
000058  03c9              LSLS     r1,r1,#15
00005a  4814              LDR      r0,|L32.172|
00005c  f7fffffe          BL       TWI_PinRemapConfig
;;;528    	TWI_ITConfig(TWI0,TWI_IT_INT,ENABLE);
000060  2201              MOVS     r2,#1
000062  4611              MOV      r1,r2
000064  4811              LDR      r0,|L32.172|
000066  f7fffffe          BL       TWI_ITConfig
;;;529    	TWI_DMACmd(TWI0,TWI_DMAReq_TX,DISABLE);
00006a  2200              MOVS     r2,#0
00006c  2180              MOVS     r1,#0x80
00006e  480f              LDR      r0,|L32.172|
000070  f7fffffe          BL       TWI_DMACmd
;;;530    	TWI_DMACmd(TWI0,TWI_DMAReq_RX,DISABLE);
000074  2200              MOVS     r2,#0
000076  2140              MOVS     r1,#0x40
000078  480c              LDR      r0,|L32.172|
00007a  f7fffffe          BL       TWI_DMACmd
;;;531    	NVIC_SetPriority(TWI0_IRQn,3);
00007e  2103              MOVS     r1,#3
000080  2017              MOVS     r0,#0x17
000082  f7fffffe          BL       __NVIC_SetPriority
;;;532    	NVIC_EnableIRQ(TWI0_IRQn);
000086  2017              MOVS     r0,#0x17
000088  2800              CMP      r0,#0
00008a  db05              BLT      |L32.152|
00008c  06c2              LSLS     r2,r0,#27
00008e  0ed2              LSRS     r2,r2,#27
000090  2101              MOVS     r1,#1
000092  4091              LSLS     r1,r1,r2
000094  4a06              LDR      r2,|L32.176|
000096  6011              STR      r1,[r2,#0]
                  |L32.152|
000098  bf00              NOP      
;;;533    	TWI_Cmd(TWI0,ENABLE);
00009a  2101              MOVS     r1,#1
00009c  4803              LDR      r0,|L32.172|
00009e  f7fffffe          BL       TWI_Cmd
;;;534    			
;;;535    }
0000a2  b007              ADD      sp,sp,#0x1c
0000a4  bd00              POP      {pc}
;;;536    
                          ENDP
0000a6  0000              DCW      0x0000
                  |L32.168|
                          DCD      0x40011000
                  |L32.172|
                          DCD      0x40020060
                  |L32.176|
                          DCD      0xe000e100
                          AREA ||i.SC_TWI1_Init||, CODE, READONLY, ALIGN=1
                  SC_TWI1_Init PROC
;;;541      */
;;;542    void SC_TWI1_Init(void)
000000  4770              BX       lr
;;;543    {
;;;544    	
;;;545        
;;;546    			
;;;547    }
;;;548    
                          ENDP
                          AREA ||i.SC_UART0_Init||, CODE, READONLY, ALIGN=2
                  SC_UART0_Init PROC
;;;158      */
;;;159    void SC_UART0_Init(void)
000000  b500              PUSH     {lr}
;;;160    {
000002  b087              SUB      sp,sp,#0x1c
;;;161    	
;;;162        
;;;163    	GPIO_InitTypeDef GPIOInit_PC02_Struct;
;;;164    	GPIOInit_PC02_Struct.GPIO_Pin = GPIO_Pin_2;
000004  2104              MOVS     r1,#4
000006  4668              MOV      r0,sp
000008  8281              STRH     r1,[r0,#0x14]
;;;165    	GPIOInit_PC02_Struct.GPIO_Mode = GPIO_Mode_IN_PU;
00000a  2101              MOVS     r1,#1
00000c  82c1              STRH     r1,[r0,#0x16]
;;;166    	GPIOInit_PC02_Struct.GPIO_DriveLevel = 0;
00000e  2100              MOVS     r1,#0
000010  8301              STRH     r1,[r0,#0x18]
;;;167    	GPIO_Init(GPIOC,&GPIOInit_PC02_Struct);
000012  a905              ADD      r1,sp,#0x14
000014  4821              LDR      r0,|L34.156|
000016  f7fffffe          BL       GPIO_Init
;;;168    	GPIO_InitTypeDef GPIOInit_PC03_Struct;
;;;169    	GPIOInit_PC03_Struct.GPIO_Pin = GPIO_Pin_3;
00001a  2108              MOVS     r1,#8
00001c  4668              MOV      r0,sp
00001e  8181              STRH     r1,[r0,#0xc]
;;;170    	GPIOInit_PC03_Struct.GPIO_Mode = GPIO_Mode_IN_PU;
000020  2101              MOVS     r1,#1
000022  81c1              STRH     r1,[r0,#0xe]
;;;171    	GPIOInit_PC03_Struct.GPIO_DriveLevel = 0;
000024  2100              MOVS     r1,#0
000026  8201              STRH     r1,[r0,#0x10]
;;;172    	GPIO_Init(GPIOC,&GPIOInit_PC03_Struct);
000028  a903              ADD      r1,sp,#0xc
00002a  481c              LDR      r0,|L34.156|
00002c  f7fffffe          BL       GPIO_Init
;;;173    	RCC_APB0PeriphClockCmd(RCC_APB0Periph_UART0, ENABLE);
000030  2101              MOVS     r1,#1
000032  2040              MOVS     r0,#0x40
000034  f7fffffe          BL       RCC_APB0PeriphClockCmd
;;;174    	UART_InitTypeDef UART_InitStruct;
;;;175    	UART_InitStruct.UART_ClockFrequency = 32000000;
000038  4819              LDR      r0,|L34.160|
00003a  9000              STR      r0,[sp,#0]
;;;176    	UART_InitStruct.UART_BaudRate = 115200;
00003c  20e1              MOVS     r0,#0xe1
00003e  0240              LSLS     r0,r0,#9
000040  9001              STR      r0,[sp,#4]
;;;177    	UART_InitStruct.UART_Mode = UART_Mode_10B;
000042  2001              MOVS     r0,#1
000044  9002              STR      r0,[sp,#8]
;;;178    	UART_Init(UART0, &UART_InitStruct);
000046  4669              MOV      r1,sp
000048  4816              LDR      r0,|L34.164|
00004a  f7fffffe          BL       UART_Init
;;;179    	UART_ITConfig(UART0,UART_IT_EN,DISABLE);
00004e  2200              MOVS     r2,#0
000050  2101              MOVS     r1,#1
000052  4814              LDR      r0,|L34.164|
000054  f7fffffe          BL       UART_ITConfig
;;;180    	UART_ITConfig(UART0,UART_IT_TX,DISABLE);
000058  2200              MOVS     r2,#0
00005a  2104              MOVS     r1,#4
00005c  4811              LDR      r0,|L34.164|
00005e  f7fffffe          BL       UART_ITConfig
;;;181    	UART_ITConfig(UART0,UART_IT_RX,DISABLE);
000062  2200              MOVS     r2,#0
000064  2102              MOVS     r1,#2
000066  480f              LDR      r0,|L34.164|
000068  f7fffffe          BL       UART_ITConfig
;;;182    	UART_DMACmd(UART0,UART_DMAReq_TX,DISABLE);
00006c  2200              MOVS     r2,#0
00006e  2180              MOVS     r1,#0x80
000070  480c              LDR      r0,|L34.164|
000072  f7fffffe          BL       UART_DMACmd
;;;183    	UART_DMACmd(UART0,UART_DMAReq_RX,DISABLE);
000076  2200              MOVS     r2,#0
000078  2140              MOVS     r1,#0x40
00007a  480a              LDR      r0,|L34.164|
00007c  f7fffffe          BL       UART_DMACmd
;;;184    	UART_PinRemapConfig(UART0,UART_PinRemap_Default);
000080  2100              MOVS     r1,#0
000082  4808              LDR      r0,|L34.164|
000084  f7fffffe          BL       UART_PinRemapConfig
;;;185    	UART_TXCmd(UART0,ENABLE);
000088  2101              MOVS     r1,#1
00008a  4806              LDR      r0,|L34.164|
00008c  f7fffffe          BL       UART_TXCmd
;;;186    	UART_RXCmd(UART0,ENABLE);
000090  2101              MOVS     r1,#1
000092  4804              LDR      r0,|L34.164|
000094  f7fffffe          BL       UART_RXCmd
;;;187    			
;;;188    }
000098  b007              ADD      sp,sp,#0x1c
00009a  bd00              POP      {pc}
;;;189    
                          ENDP
                  |L34.156|
                          DCD      0x40011200
                  |L34.160|
                          DCD      0x01e84800
                  |L34.164|
                          DCD      0x40020020
                          AREA ||i.SC_UART1_Init||, CODE, READONLY, ALIGN=1
                  SC_UART1_Init PROC
;;;194      */
;;;195    void SC_UART1_Init(void)
000000  4770              BX       lr
;;;196    {
;;;197    	
;;;198        
;;;199    			
;;;200    }
;;;201    
                          ENDP
                          AREA ||i.SC_UART2_Init||, CODE, READONLY, ALIGN=1
                  SC_UART2_Init PROC
;;;206      */
;;;207    void SC_UART2_Init(void)
000000  4770              BX       lr
;;;208    {
;;;209    	
;;;210        
;;;211    			
;;;212    }
;;;213    
                          ENDP
                          AREA ||i.SC_UART3_Init||, CODE, READONLY, ALIGN=1
                  SC_UART3_Init PROC
;;;218      */
;;;219    void SC_UART3_Init(void)
000000  4770              BX       lr
;;;220    {
;;;221    	
;;;222        
;;;223    			
;;;224    }
;;;225    #if defined (SC32f12xx)
                          ENDP
                          AREA ||i.SC_WDT_Init||, CODE, READONLY, ALIGN=1
                  SC_WDT_Init PROC
;;;629      */
;;;630    void SC_WDT_Init(void)
000000  4770              BX       lr
;;;631    {
;;;632    	
;;;633        
;;;634    		
;;;635    }
;;;636    
                          ENDP
                          AREA ||i.__NVIC_SetPriority||, CODE, READONLY, ALIGN=2
                  __NVIC_SetPriority PROC
;;;847     */
;;;848    __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
000000  b510              PUSH     {r4,lr}
;;;849    {
;;;850      if ((int32_t)(IRQn) >= 0)
000002  2800              CMP      r0,#0
000004  db19              BLT      |L39.58|
;;;851      {
;;;852        NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
000006  4a1a              LDR      r2,|L39.112|
000008  2303              MOVS     r3,#3
00000a  021b              LSLS     r3,r3,#8
00000c  18d2              ADDS     r2,r2,r3
00000e  0883              LSRS     r3,r0,#2
000010  009b              LSLS     r3,r3,#2
000012  58d2              LDR      r2,[r2,r3]
000014  0783              LSLS     r3,r0,#30
000016  0edc              LSRS     r4,r3,#27
000018  23ff              MOVS     r3,#0xff
00001a  40a3              LSLS     r3,r3,r4
00001c  439a              BICS     r2,r2,r3
00001e  078b              LSLS     r3,r1,#30
000020  0e1b              LSRS     r3,r3,#24
000022  0784              LSLS     r4,r0,#30
000024  0ee4              LSRS     r4,r4,#27
000026  40a3              LSLS     r3,r3,r4
000028  431a              ORRS     r2,r2,r3
00002a  4b11              LDR      r3,|L39.112|
00002c  2403              MOVS     r4,#3
00002e  0224              LSLS     r4,r4,#8
000030  191b              ADDS     r3,r3,r4
000032  0884              LSRS     r4,r0,#2
000034  00a4              LSLS     r4,r4,#2
000036  511a              STR      r2,[r3,r4]
000038  e018              B        |L39.108|
                  |L39.58|
;;;853           (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
;;;854      }
;;;855      else
;;;856      {
;;;857        SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
00003a  4a0e              LDR      r2,|L39.116|
00003c  0703              LSLS     r3,r0,#28
00003e  0f1b              LSRS     r3,r3,#28
000040  3b08              SUBS     r3,r3,#8
000042  089b              LSRS     r3,r3,#2
000044  009b              LSLS     r3,r3,#2
000046  58d2              LDR      r2,[r2,r3]
000048  0783              LSLS     r3,r0,#30
00004a  0edc              LSRS     r4,r3,#27
00004c  23ff              MOVS     r3,#0xff
00004e  40a3              LSLS     r3,r3,r4
000050  439a              BICS     r2,r2,r3
000052  078b              LSLS     r3,r1,#30
000054  0e1b              LSRS     r3,r3,#24
000056  0784              LSLS     r4,r0,#30
000058  0ee4              LSRS     r4,r4,#27
00005a  40a3              LSLS     r3,r3,r4
00005c  431a              ORRS     r2,r2,r3
00005e  4b05              LDR      r3,|L39.116|
000060  0704              LSLS     r4,r0,#28
000062  0f24              LSRS     r4,r4,#28
000064  3c08              SUBS     r4,r4,#8
000066  08a4              LSRS     r4,r4,#2
000068  00a4              LSLS     r4,r4,#2
00006a  511a              STR      r2,[r3,r4]
                  |L39.108|
;;;858           (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
;;;859      }
;;;860    }
00006c  bd10              POP      {r4,pc}
;;;861    
                          ENDP
00006e  0000              DCW      0x0000
                  |L39.112|
                          DCD      0xe000e100
                  |L39.116|
                          DCD      0xe000ed1c
;*** Start embedded assembler ***
#line 1 "..\\User\\SC_Init.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_SC_Init_c_SC_Init____REV16|
#line 463 "..\\CMSIS\\cmsis_armcc.h"
|__asm___9_SC_Init_c_SC_Init____REV16| PROC
#line 464
 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_SC_Init_c_SC_Init____REVSH|
#line 478
|__asm___9_SC_Init_c_SC_Init____REVSH| PROC
#line 479
 revsh r0, r0
 bx lr
	ENDP
;*** End   embedded assembler ***
